{"version":3,"sources":["redux/actions/index.js","components/Form.jsx","components/Card.jsx","App.js","redux/reducer/setPlaceReducer.js","redux/reducer/setPlaceDataReducer.js","redux/reducer/index.js","store.js","index.js"],"names":["updatePlaceData","place","dispatch","fetch","then","res","json","data","console","log","type","payload","Form","useSelector","state","useDispatch","value","placeholder","onChange","e","updatePlace","target","onClick","Card","placeData","location","className","src","current","condition","icon","alt","temp_c","name","wind_kph","humidity","precip_in","App","placeReducer","action","placeDataReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKAMOA,G,MAAiB,SAACC,GACrB,OAAO,SAACC,GACRC,MAAM,oFAAD,OAAqFF,IACzFG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZL,EACE,CACIQ,KAAK,iBACLC,QAAQJ,U,cCSLK,EApBF,WACX,IAAMX,EAAQY,aAAY,SAACC,GAAD,OAASA,EAAMb,SACnCC,EAAUa,cAChB,OACM,qCACA,sDACF,uBAAOL,KAAK,OACZM,MAAOf,EACPgB,YAAY,QACZC,SAAU,SAACC,GACXjB,EDdY,SAACD,GACf,MAAM,CACFS,KAAK,YACLC,QAAQV,GCWDmB,CAAYD,EAAEE,OAAOL,WAG9B,wBACAM,QAASpB,EAASF,EAAgBC,IADlC,wBCaSsB,EA5BH,WACR,IAAMC,EAAUX,aAAY,SAAAC,GAAK,OAAEA,EAAMU,aACzC,OACI,mCACCA,EAAUC,SAET,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAKH,EAAUI,QAAQC,UAAUC,KAAMC,IAAI,QAChD,sBAAKL,UAAU,OAAf,UAAuBF,EAAUI,QAAQI,OAAzC,UACA,sBAAKN,UAAU,WAAf,UAA2BF,EAAUC,SAASQ,KAA9C,OACA,qBAAKP,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,sBAA8B,sBAAKA,UAAU,OAAf,UAAuBF,EAAUI,QAAQM,SAAzC,IAAmD,yCAAnD,UAE9B,sBAAKR,UAAU,MAAf,sBAA8B,sBAAKA,UAAU,OAAf,UAAuBF,EAAUI,QAAQO,SAAzC,IAAmD,2CAEjF,sBAAKT,UAAU,MAAf,2BAAmC,sBAAKA,UAAU,OAAf,UAAuBF,EAAUI,QAAQQ,UAAzC,IAAoD,mDAQ3F,8CCVGC,MAZf,WAIE,OACE,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,cCKSY,EAfK,WAAsB,IAArBxB,EAAoB,uDAAd,GAAKyB,EAAS,uCASrC,MAAoB,cAAhBA,EAAO7B,KACA6B,EAAO5B,QAEXG,GCLI0B,EARU,WACxB,IADyB1B,EAC1B,uDADgC,GAAGyB,EACnC,uCACI,MAAkB,mBAAdA,EAAO7B,KACA6B,EAAO5B,QAEXG,GCII2B,EALKC,YAAgB,CAChCzC,MAAMqC,EACNd,UAAWxB,ICAA2C,EAFDC,YAAYH,EAAaI,YAAgBC,MCEvDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGFO,SAASC,eAAe,W","file":"static/js/main.810530b5.chunk.js","sourcesContent":["const updatePlace=(place)=>{\r\n    return{\r\n        type:'SET_PLACE',\r\n        payload:place\r\n    }\r\n}\r\n const updatePlaceData =(place) =>{\r\n    return (dispatch)=>{\r\n    fetch(`https://api.weatherapi.com/v1/current.json?key=a1089418425d486c9a0185247210908&q=${place}`)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      dispatch(\r\n        {\r\n            type:'SET_PLACE_DATA',\r\n            payload:data,\r\n          }\r\n      )\r\n    })\r\n    }\r\n}\r\n export {updatePlace, updatePlaceData}\r\n","import React from 'react';\r\nimport {updatePlace, updatePlaceData} from '../redux/actions/index'\r\nimport { useDispatch ,useSelector } from 'react-redux';\r\n\r\nconst Form = ()=>{\r\n  const place = useSelector((state)=>state.place)\r\n  const dispatch= useDispatch()  \r\n  return(\r\n        <>\r\n        <h1>Weather Card web-app</h1>\r\n      <input type=\"text\" \r\n      value={place}\r\n      placeholder=\"delhi\"\r\n      onChange={(e)=>{\r\n      dispatch(updatePlace(e.target.value))\r\n        }} \r\n      />\r\n      <button \r\n      onClick={dispatch(updatePlaceData(place))}\r\n      >search</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form;","import { useSelector } from \"react-redux\"\r\n\r\nconst Card =()=>{\r\n    const placeData=useSelector(state=>state.placeData)\r\n    return (\r\n        <>\r\n        {placeData.location ? \r\n          (\r\n          <div className=\"card\">\r\n            <img src={placeData.current.condition.icon} alt=\"img\" />\r\n            <div className=\"temp\">{placeData.current.temp_c}Â°</div>\r\n            <div className=\"cityName\">{placeData.location.name} </div>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">Wind Now <div className=\"data\">{placeData.current.wind_kph} <span>Km/hr</span> </div></div>\r\n                \r\n                <div className=\"col\">Humidity <div className=\"data\">{placeData.current.humidity} <span>%</span></div></div>\r\n                \r\n                <div className=\"col\">Precipitation <div className=\"data\">{placeData.current.precip_in} <span>%</span></div></div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n\r\n         </div>\r\n         )\r\n          :(<h5>not found</h5>)}\r\n        </>\r\n    )\r\n}\r\nexport default Card","import './App.css';\nimport Form from './components/Form';\nimport Card from './components/Card';\n\nfunction App() {\n  // const updatePlaceData=()=>{\n\n  // }\n  return (\n    <div className=\"App\">\n      <Form/>\n      <Card />\n    </div>\n  );\n}\n\nexport default App;\n","// const initial={}\r\nconst placeReducer= (state=\"\" , action)=>{\r\n    // switch(action.type){\r\n    //     case 'SET_PLACE':\r\n    //         return action.payload \r\n    //     case 'SET_PLACE_UPDATE':\r\n    //         return action.payload\r\n    //     default :\r\n    //         return state\r\n    // }\r\n    if (action.type === \"SET_PLACE\"){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default placeReducer;","const placeDataReducer = (state={},action)=>\r\n{\r\n    if (action.type==='SET_PLACE_DATA'){\r\n        return action.payload\r\n    }\r\n    return state\r\n}\r\n\r\nexport default placeDataReducer","import {combineReducers} from 'redux';\r\nimport placeReducer from './setPlaceReducer';\r\nimport updatePlaceData from './setPlaceDataReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    place:placeReducer,\r\n    placeData: updatePlaceData\r\n});\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './redux/reducer';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}